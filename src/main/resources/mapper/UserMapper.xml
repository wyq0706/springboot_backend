<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- 指定了mapper对应的dao -->
<mapper namespace="com.mobilecourse.backend.dao.UserDao">

    <!-- parameterType指定了参数类型 -->
    <insert id="insert"  keyProperty="id" useGeneratedKeys="true" parameterType="com.mobilecourse.backend.model.User">
        INSERT INTO user
        <trim prefix="(" suffix=")" suffixOverrides="," >
            username, password,type
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            #{username}, #{password},#{type}
        </trim>;
    </insert>

    <select id="ifUsernameDuplicate" resultType="java.lang.Integer" parameterType="java.lang.String">
        SELECT COUNT(*)
        FROM user
        where username=#{username}
    </select>

    <select id="ifUserExists" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM user
        where username=#{username} and password=#{password}
    </select>

    <select id="getUser" resultType="com.mobilecourse.backend.model.User">
        SELECT *
        FROM user
        where username=#{username} and password=#{password}
    </select>

    <update id="updateUsername">
        UPDATE user
        SET username=#{newName}
        WHERE username=#{username}
    </update>

    <update id="updatePassword">
        UPDATE user
        SET password=#{newPassword}
        WHERE username=#{username}
    </update>

    <update id="updateSignature">
        UPDATE user
        SET signature=#{newSignature}
        WHERE username=#{username}
    </update>

    <update id="updatePersonalInfo">
        UPDATE user
        SET personal_info=#{newPersonalInfo}
        WHERE username=#{username}
    </update>

    <!--    返回一对一结果集-->
    <resultMap id="ProjectsJoinTeacher" type="com.mobilecourse.backend.model.Project">
        <id column="project_id" property="id"/>
        <result column="project_title" property="title"/>
        <result column="requirement" property="requirement"/>
        <result column="teacher_id" property="teacher.id"/>
        <result column="department" property="teacher.department"/>
        <result column="teacher_name" property="teacher.username"/>
    </resultMap>


    <select id="getProjects" resultMap="ProjectsJoinTeacher">
        SELECT user.id as teacher_id,
        user.username as teacher_name,
        user.department as department,
        project.title as project_title,
        project.requirement,
        project.id as project_id
        FROM project.user,project.project
        WHERE user.id=project.teacher_id
        ORDER by project.created_time DESC
    </select>

    <insert id="goFollow">
        INSERT INTO rela_follow
        <trim prefix="(" suffix=")" suffixOverrides="," >
            followed_id,follower_id
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            #{followed_id}, #{follower_id}
        </trim>;
    </insert>

    <select id="getFollow" parameterType="java.lang.Integer" resultType="com.mobilecourse.backend.model.User">
        SELECT *
        FROM user
        WHERE user.id in (
        SELECT followed_id as id
        FROM rela_follow
        WHERE rela_follow.follower_id=#{id});
    </select>

    <select id="getFollowed" parameterType="java.lang.Integer" resultType="com.mobilecourse.backend.model.User">
        SELECT *
        FROM user
        WHERE user.id in (
        SELECT follower_id as id
        FROM rela_follow
        WHERE rela_follow.followed_id=#{id});
    </select>

</mapper>